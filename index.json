[{"content":"DNS污染 今天按照惯例在查看Github上自己的仓库时，突然显示连接超时，随掏出手机发现手机竟可以正常访问（电脑连的上移动宽带，手机则是电信的）。脑中瞬间闪出一个想法——莫非是DNS污染？于是遂即查阅资料，予以一篇浅显的博客录之\n1.DNS污染的定义 DNS污染，又称为域名服务器缓存污染（DNScache pollution）或者域名服务器快照侵害（DNS cache poisoning）。DNS污染是指一些刻意制造或无意中制造出来的域名服务器分组，把域名指往不正确的IP地址。一般来说，网站在互联网上一般都有可信赖的域名服务器，但为减免网络上的交通，一般的域名都会把外间的域名服务器数据暂存起来，待下次有其他机器要求解析域名时，可以立即提供服务。一旦有相关网域的局域域名服务器的缓存受到污染，就会把网域内的电脑导引往错误的服务器或服务器的网址。其实总结起来用大白话说就是，通过DNS污染导致客户端收到错误的IP地址，从而无法正常访问目标网站。\n2.DNS污染的原理 首先我们来看一下电脑是如何访问目标网站的，如图1-DNS域名解析\n​ 图1-DNS域名解析\n本地客户机提出域名解析请求，查找本地HOST文件后将该请求发送给本地的域名服务器。\n将请求发送给本地的域名服务器。\n当本地的域名服务器收到请求后，就先查询本地的缓存。\n如果有该纪录项，则本地的域名服务器就直接把查询的结果返回浏览器。\n5. 如果本地DNS缓存中没有该纪录，则本地域名服务器就直接把请求发给根域名服务器。\n然后根域名服务器再返回给本地域名服务器一个所查询域（根的子域）的主域名服务器的地址。\n本地服务器再向上一步返回的域名服务器发送请求，然后接受请求的服务器查询自己的缓存，如果没有该纪录，则返回相关的下级的域名服务器的地址。\n重复第7步，直到找到正确的纪录。\n本地域名服务器把返回的结果保存到缓存，以备下一次使用，同时还将结果返回给客户机\n而DNS污染则是在第五步产生的，我们举一个浅显的例子\n假设A为用户端，B为DNS服务器，C为A到B链路的一个节点的网络设备（路由器，交换机，网关等等）。然后我们来模拟一次被污染的DNS请求过程。A向B构建UDP连接，然后，A向B发送查询请求，查询请求内容通常是：“github.com”，这一个数据包经过节点设备C继续前往DNS服务器B；然而在这个过程中，C通过对数据包进行特征分析（远程通讯端口为DNS服务器端口，激发内容关键字检查，检查特定的域名如上述的“github.com\u0026quot;,以及查询的记录类型\u0026quot;A记录\u0026quot;），从而立刻返回一个错误的解析结果（如返回了\u0026quot;A 123.123.123.123\u0026quot;），众所周知，作为链路上的一个节点，C机器的这个结果必定会先于真正的域名服务器的返回结果到达用户机器A(很多被污染的目标网站服务器都位于国外)，而目前我们的DNS解析机制有一个重要的原则，就是只认第一，因此C节点所返回的查询结果就被A机器当作了最终返回结果，用于构建链接。如图2-DNS污染原理。\n​ 图2-DNS污染原理\n3.检测DNS污染 由于DNS污染会返回一个虚假的IP地址，而当我们访问一个根本不存在的域名时，如果正常来说肯定不会有任何回答，然而当在域名被DNS污染后则会返回一个虚假的IP地址。这样我们就进行了一个简单的DNS污染检测。下面我将以一个简单的实验进行说明，为了方便理解，我先介绍一下用到的命令。\nnslookup#查询 DNS（域名系统）记录以解析 Internet 中的域名到相应的 IP 地址 ipconfig /flushdns#刷新DNS解析缓存 我们先选取一个不存在的国外IP作为域名服务器进行解析，然后用nslookup进行网络诊断\nC:\\\u0026gt;nslookup facebook.com 101.101.153.1 DNS request timed out. timeout was 2 seconds. Can\u0026#39;t find server name for address 101.101.153.1: Timed out Server: UnKnown Address: 101.101.153.1 Name: twitter.com Address: 60.41.5.18 接着我们选取一个可正常访问的域名进行网络诊断\nC:\\\u0026gt;nslookup www.baidu.com 101.101.153.1 DNS request timed out. timeout was 2 seconds. Can\u0026#39;t find server name for address 101.101.153.1: Timed out Server: UnKnown Address: 101.101.153.1 DNS request timed out. timeout was 2 seconds. DNS request timed out. timeout was 2 seconds. Request to UnKnown timed-out 这里我们可以看出twitter.com这个域名以经被DNS污染了\n4.DNS污染解决方案 VPN技术\n手动修改HOST文件\n这里着重讲一下这个方法，也是我常用的方法。先介绍一下HOST文件的作用\n加快域名解析：当你访问一个网址时，系统会首先检查hosts文件中的条目，如果找到对应的IP地址，则直接使用该地址去连接目标服务器，而不通过DNS服务器进行查询，从而提高域名解析速度。\n本地化域名解析：在局域网环境下，可以为内部网络的设备配置hosts文件来实现快速、便捷的本地域名解析，例如将内部服务器的域名映射到其局域网IP地址。\n跳过特定DNS设置：对于某些需要绕过公共DNS或CDN（内容分发网络）以访问特定版本或测试环境的网站，可以通过修改hosts文件指定要连接的服务器IP。\n过滤或屏蔽网站：用户还可以利用hosts文件将不想访问或者可能有害的网站域名指向无效的IP地址，比如127.0.0.1（本地环回地址），以此达到拦截恶意网站、广告服务器等目的。\n测试与调试：开发人员经常用hosts文件临时重定向某个域名至本地开发环境的IP地址上，以便于测试Web应用或服务。\n当客户端需要访问一个目标网站时，会先在本地的HOST文件里先查询有没有相关的记录，如果有则不必通过DNS服务器解析。这样的设计本意是为了提高网站的访问速度和绕过恶意网站，而我们则可以通过提前设好HOST文件内的内容，从而避免收到“毒苹果”。\nHOST文件位于C:\\windows\\System32\\drivers\\etc中，这是我的HOST文件内容\n140.82.113.4 github.com 140.82.113.4 gist.github.com 140.82.114.10 nodeload.github.com 199.232.69.194 github.global.ssl.fastly.net P.S这里可能会遇到一些修改host文件的困难，只需要将host文件复制到桌面，然后修改桌面文件最后替换etc文件下的host文件\n5.常用工具 IP地址查询网站：https://www.ipaddress.com/ip-lookup\n绘 图 工 具： https://app.diagrams.net/\n引用 DNS的解析，查询，调度原理是什么？什么是DNS劫持，污染？如何监控？_监测dns劫持的手段-CSDN博客 DNS污染（国内的服务器(非DNS)） - TrustNature - 博客园 (cnblogs.com) 通过开源程序同时解决DNS劫持和DNS污染的问题-月光博客 (williamlong.info) ","permalink":"https://realmarkyang.vercel.app/posts/tech/dns%E6%B1%A1%E6%9F%93/","summary":"DNS污染 今天按照惯例在查看Github上自己的仓库时，突然显示连接超时，随掏出手机发现手机竟可以正常访问（电脑连的上移动宽带，手机则是电信的）。脑中瞬间闪出一个想法——莫非是DNS污染？于是遂即查阅资料，予以一篇浅显的博客录之 1.DNS污染的定义 DNS污染，又称为域名服务器缓存","title":"DNS污染"},{"content":"\r我心上有一朵花在生长\n越是珍惜 孤独感就越发地膨胀\n只要在脑海中勾勒出你的模样\n万物便止不住喧嚣\n我已不会再轻易悲伤\n我已不会再作无意义的回想\n我已不会再进行任何抵抗\n风还在响\n每当我尝试遗忘 痛苦就充斥心房\n像某种信号 强迫我起身寻找\n星星掉落的数量 候鸟离去的方向\n潮水撤退的形状 都像是\n有关于你的预兆\n花开好了 我也走了那么远了\n可你说的话还在心底安静燃烧\n说谎 都是因为\n害怕未来会再次指向一片荒凉\n如果风会吹过你的窗棂\n能不能将这思念带去 能不能将这彷徨带去\n声音 旋律 记忆 呼吸 字句 书信 梦境\n如果尽数传递 是否我就能更加地靠近你 靠近你\n每当我尝试遗忘 不甘就充斥心房\n像某种信号 提示我继续寻找\n雏鸟褪下的羽毛 被修葺过的信箱\n留有划痕的纸张 是预兆\n当我向着你奔跑 温暖就充斥心房\n思念指引我回到你的身旁\n船舶停靠的数量 太阳升起的方向\n烟火绽放的形状 全都是 与你重逢的预兆\n那不停歇的海浪 不冻港 候鸟翅膀 都是信号\n那宝石微芒 花苞盛开的芬芳 都是预兆\n那未干透的诗行 藏着故事的手掌 你的胸膛 你的心跳\n那些同行的时光 和微笑 全都\n是我的宝藏\u0026hellip;\u0026hellip;\n","permalink":"https://realmarkyang.vercel.app/posts/life/%E9%A2%84%E5%85%86/","summary":"我心上有一朵花在生长 越是珍惜 孤独感就越发地膨胀 只要在脑海中勾勒出你的模样 万物便止不住喧嚣 我已不会再轻易悲伤 我已不会再作无意义的回想 我已不会再进行任何抵抗 风还在响 每当我尝试遗忘 痛苦就充斥心房 像某种信号 强迫我起身寻找 星星掉落的数量 候鸟离去的方向 潮水撤退的形状 都像是 有关于你的预兆 花开好","title":"预兆"},{"content":"\r近些年来总觉得悲伤莫名的来袭，偶偶想起鲁迅先生，初中时常常拜读鲁迅先生的书籍，自己的行为和性格也潜移默化的受到了先生的影响。近些来有些悲观的想法，思考再三觉得还是写下来为妙。\n国内的婚姻过于沉重 个人感情经历的沉重 思想的变化与未来的一点规划 1.国内的婚姻过于沉重 由于近代中国的落后以及传统思想的影响，婚姻对中国人来说很重要，这是增加生产效率，降低生活成本的方式，也是国人认为的爱情的终极走向。中国人，特别是老一辈的爱情往往是建立在以婚姻为目的的基础上，在这样的背景下，爱情往往会与很多东西挂钩，比如个人能力、金钱、家庭背景等等，这个时候，爱情就会不那么纯粹，而是更功利主义。但是随着中国的发展进步，对新一代而言，他们不那么需要婚姻了，随着生活水平的提高，一个人也可以过得很好，他们可以更关注自己在感情中的体验，而不是考虑这些功利因素，也不那么在乎一生是否只爱一个人，如果不合适那就再尝试下一段恋爱。\n相对来说，不论是国外的历史也好，文化也好，经济发展也好，都使得他们更关注自己是否爱这个人，也更有底气这么做，而不是关注和这个人结合是否对自己有利。国人更加注重婚姻和家庭观念，但爱情中也会参杂着物质和利益，而在恋爱过程中也往往给自己加上无形的枷锁。同时再“爱”别人的过程中也忽视了爱自己，我觉得这与国人从小受到的教育有关。国人普遍提倡压抑自己，过于照顾他人的感情，我觉得这也是近些年来“舔狗文化”流行的原因。思想也免不得受到西方的影响，我认为爱情是自由的，忠贞的，无国界的，无条件的平等的相爱，爱情不应参杂过多的杂质。爱情应该是两个人的相濡以沫，共患难，而不是以财富为条件，肉体为筹码的交易。固然爱情需要诗和远方，也需要牛奶和面包。但是爱情是需要精心经营的，也不是每个人生来就含着“金汤匙”，一味强调牛奶和面包，而忽视两个人在爱情中的点点滴滴，这不是纯粹被物质至上主义绑架了吗？人生也是如此，如果一味强调结果而忽视人生是一场历练，你会错过沿途很多的美好，那么你的人生是不是太枯燥了些。不能太过功利主义，事实上纵观人类的发展史，艺术，音乐，革命事业\u0026hellip;\u0026hellip;都充斥着理想主义的光辉，而那些理想主义者的战士们即使被钉死在十字架上，即使不被世人理解一生背负骂名，即使饥寒交迫的穿梭在阴暗潮湿的雨林中，即使爱人的生命在怀中逝去，他们也不曾放弃过自己的理想。当他们决定踏上这条非同寻常的人生道路之时，就注定了他们彻底放弃了功利主义。好了有点偏题了，自己每每看到这种情况由不得情绪激动，从而多说了几句。\n2.个人感情经历的沉重 严格来说，本人有两段情感经历，结局都不尽美好。\n​ 第一段感情我认为是我整个人生当中第一次感觉到了爱，我也知道了自己值得被爱。她和我一样，都是理想主义者，我们的爱跨越山河，忠贞纯洁。她也是第一次让我好好思考自己，我们的爱整体闪耀着理想主义的光辉，这段感情也为我相信纯洁的爱情提供了依据，因为我遇到过，我们无视家庭背景无条件的相爱，这段爱情我应该一辈子都不会忘。\n​ 第二段感情对我来说是无所谓的，是痛苦的。博主的女朋友患有严重的焦虑症和抑郁症，当你眼睁睁的看着一个人年轻的生命被抑郁症一点点侵蚀，她的灵魂一步步被拖下深渊，那种无力感对博主来说是十分痛苦和难受的。写到这里，博主提起笔却不知道该不该继续往下写，一些负面情绪涌上心头。近些天来，前女友给我发消息说在那段感情中亏欠我，我倒是对她假惺惺的态度并不感冒，但扪心自问博主好像从始至终从没爱过她。分手时，我只说了句“好的”，我其实并没有一点悲伤。两个不相爱的人的结合注定是不幸的。她对博主很关心，但是当病情发作的时候，又非常冷漠，我常常陷入两个人是否还继续相爱着的精神内耗。我也常常羡慕那些正常情侣的日常，但到头来还得面对自己不正常的女友。所以这段感情也不出意外的破裂了，当然还有一些杂七杂八的支线故事，我就不一一展开了，至此博主本人对于传统中国的爱情至此彻底失望。\n3.思想的变化与未来的一点规划 先鸽一下。。。。累了\n","permalink":"https://realmarkyang.vercel.app/posts/life/%E6%9D%82%E6%83%B3/","summary":"\u003cp\u003e\u003cimg loading=\"lazy\" src=\"1.png\" alt=\"紫罗兰永恒花园\"  /\u003e\r\n\u003c/p\u003e\n\u003cp\u003e近些年来总觉得悲伤莫名的来袭，偶偶想起鲁迅先生，初中时常常拜读鲁迅先生的书籍，自己的行为和性格也潜移默化的受到了先生的影响。近些来有些悲观的想法，思考再三觉得还是写下来为妙。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e国内的婚姻过于沉重\u003c/li\u003e\n\u003cli\u003e个人感情经历的沉重\u003c/li\u003e\n\u003cli\u003e思想的变化与未来的一点规划\u003c/li\u003e\n\u003c/ul\u003e","title":"杂想"},{"content":"\r","permalink":"https://realmarkyang.vercel.app/posts/life/testimage/","summary":"","title":"TestImage"},{"content":"1. 介绍 scan命令的作用和keys *的作用类似，主要用于查找redis中的键，但是在正式的生产环境中一般不会直接使用keys *这个命令，因为他会返回所有的键，如果键的数量很多会导致查询时间很长，进而导致服务器阻塞，所以需要scan来进行更细致的查找\nscan总共有这几种命令：scan、sscan、hscan、zscan，分别用于迭代数据库中的：数据库中所有键、集合键、哈希键、有序集合键，命令具体结构如下：\nscan cursor [MATCH pattern] [COUNT count] [TYPE type] sscan key cursor [MATCH pattern] [COUNT count] hscan key cursor [MATCH pattern] [COUNT count] zscan key cursor [MATCH pattern] [COUNT count] 2. scan scan cursor [MATCH pattern] [COUNT count] [TYPE type]，cursor表示游标，指查询开始的位置，count默认为10，查询完后会返回下一个开始的游标，当返回0的时候表示所有键查询完了\n127.0.0.1:6379[2]\u0026gt; scan 0 1) \u0026#34;3\u0026#34; 2) 1) \u0026#34;mystring\u0026#34; 2) \u0026#34;myzadd\u0026#34; 3) \u0026#34;myhset\u0026#34; 4) \u0026#34;mylist\u0026#34; 5) \u0026#34;myset2\u0026#34; 6) \u0026#34;myset1\u0026#34; 7) \u0026#34;mystring1\u0026#34; 8) \u0026#34;mystring3\u0026#34; 9) \u0026#34;mystring4\u0026#34; 10) \u0026#34;myset\u0026#34; 127.0.0.1:6379[2]\u0026gt; scan 3 1) \u0026#34;0\u0026#34; 2) 1) \u0026#34;myzadd1\u0026#34; 2) \u0026#34;mystring2\u0026#34; 3) \u0026#34;mylist2\u0026#34; 4) \u0026#34;myhset1\u0026#34; 5) \u0026#34;mylist1\u0026#34; MATCH可以采用模糊匹配找出自己想要查找的键，这里的逻辑是先查出20个，再匹配，而不是先匹配再查询，这里加上count 20是因为默认查出的10个数中可能不能包含所有的相关项，所以把范围扩大到查20个，我这里测试的键总共有15个\n127.0.0.1:6379[2]\u0026gt; scan 0 match mylist* count 20 1) \u0026#34;0\u0026#34; 2) 1) \u0026#34;mylist\u0026#34; 2) \u0026#34;mylist2\u0026#34; 3) \u0026#34;mylist1\u0026#34; TYPE可以根据具体的结构类型来匹配该类型的键\n127.0.0.1:6379[2]\u0026gt; scan 0 count 20 type list 1) \u0026#34;0\u0026#34; 2) 1) \u0026#34;mylist\u0026#34; 2) \u0026#34;mylist2\u0026#34; 3) \u0026#34;mylist1\u0026#34; 3. sscan sscan key cursor [MATCH pattern] [COUNT count]，sscan的第一个参数总是集合类型的key\n127.0.0.1:6379[2]\u0026gt; sadd myset1 a b c d (integer) 4 127.0.0.1:6379[2]\u0026gt; smembers myset1 1) \u0026#34;d\u0026#34; 2) \u0026#34;a\u0026#34; 3) \u0026#34;c\u0026#34; 4) \u0026#34;b\u0026#34; 127.0.0.1:6379[2]\u0026gt; sscan myset1 0 1) \u0026#34;0\u0026#34; 2) 1) \u0026#34;d\u0026#34; 2) \u0026#34;c\u0026#34; 3) \u0026#34;b\u0026#34; 4) \u0026#34;a\u0026#34; 127.0.0.1:6379[2]\u0026gt; sscan myset1 0 match a 1) \u0026#34;0\u0026#34; 2) 1) \u0026#34;a\u0026#34; 4. hscan hscan key cursor [MATCH pattern] [COUNT count]，sscan的第一个参数总是哈希类型的key\n127.0.0.1:6379[2]\u0026gt; hset myhset1 kk1 vv1 kk2 vv2 kk3 vv3 (integer) 3 127.0.0.1:6379[2]\u0026gt; hgetall myhset1 1) \u0026#34;kk1\u0026#34; 2) \u0026#34;vv1\u0026#34; 3) \u0026#34;kk2\u0026#34; 4) \u0026#34;vv2\u0026#34; 5) \u0026#34;kk3\u0026#34; 6) \u0026#34;vv3\u0026#34; 127.0.0.1:6379[2]\u0026gt; hscan myhset1 0 1) \u0026#34;0\u0026#34; 2) 1) \u0026#34;kk1\u0026#34; 2) \u0026#34;vv1\u0026#34; 3) \u0026#34;kk2\u0026#34; 4) \u0026#34;vv2\u0026#34; 5) \u0026#34;kk3\u0026#34; 6) \u0026#34;vv3\u0026#34; 5. zscan zscan key cursor [MATCH pattern] [COUNT count]，sscan的第一个参数总是有序集合类型的key\n127.0.0.1:6379[2]\u0026gt; zadd myzadd1 1 zz1 2 zz2 3 zz3 (integer) 3 127.0.0.1:6379[2]\u0026gt; zrange myzadd1 0 -1 withscores 1) \u0026#34;zz1\u0026#34; 2) \u0026#34;1\u0026#34; 3) \u0026#34;zz2\u0026#34; 4) \u0026#34;2\u0026#34; 5) \u0026#34;zz3\u0026#34; 6) \u0026#34;3\u0026#34; 127.0.0.1:6379[2]\u0026gt; zscan myzadd1 0 1) \u0026#34;0\u0026#34; 2) 1) \u0026#34;zz1\u0026#34; 2) \u0026#34;1\u0026#34; 3) \u0026#34;zz2\u0026#34; 4) \u0026#34;2\u0026#34; 5) \u0026#34;zz3\u0026#34; 6) \u0026#34;3\u0026#34; ","permalink":"https://realmarkyang.vercel.app/posts/tech/tech1/","summary":"1. 介绍 scan命令的作用和keys *的作用类似，主要用于查找redis中的键，但是在正式的生产环境中一般不会直接使用keys *这个命令，因为他会返回所有的键，如果键的数量很多会导致查询时间很长，进而导致服务器阻塞，所以需要scan来进行更细致的查找 scan总共有这几种命令：sca","title":"Redis scan命令学习"},{"content":"","permalink":"https://realmarkyang.vercel.app/posts/project/project/","summary":"","title":"Blog"},{"content":"","permalink":"https://realmarkyang.vercel.app/posts/life/life/","summary":"","title":"Life"},{"content":"","permalink":"https://realmarkyang.vercel.app/posts/read/read/","summary":"","title":"Read"},{"content":"\rSulv\u0026#39;s Blog\r一个记录技术、阅读、生活的博客\r烦嚣的人\u0026#39;s Blog\r热爱技术，热爱生活\r👉友链格式\r名称： realMarkYang\u0026rsquo;s Blog 网址： https://realmarkyang.vercel.app/ 图标： https://realmarkyang.github.io/img/Q.jpg 描述： 向前走，别回头 👉友链申请要求\r秉承互换友链原则、文章定期更新、不能有太多广告、个人描述字数控制在15字内\n","permalink":"https://realmarkyang.vercel.app/links/","summary":"Sulv\u0026#39;s Blog 一个记录技术、阅读、生活的博客 烦嚣的人\u0026#39;s Blog 热爱技术，热爱生活 👉友链格式 名称： realMarkYang\u0026rsquo;s Blog 网址： https://realmarkyang.vercel.app/ 图标： https://realmarkyang.github.io/img/Q.jpg 描述： 向前走，别回头 👉友链申请要求 秉承互换友链原则、文章定期更新、不能有太多广告、个人描述字数控制在15字内","title":"🤝友链"},{"content":"关于我\n我叫realMarkYang,博主本人是个菜鸟，每每和身边的大神对比便心生愧疚\r爱好\n拳击 京阿尼 电子表 ","permalink":"https://realmarkyang.vercel.app/about/","summary":"关于我 我叫realMarkYang,博主本人是个菜鸟，每每和身边的大神对比便心生愧疚 爱好 拳击 京阿尼 电子表","title":"🙋🏻‍♂️关于"}]